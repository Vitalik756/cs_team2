@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
@using System.Security.Claims;

<ul class="nav nav-pills nav-stacked">
    <li class="@UserProfileNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">UserProfile</a></li>
    @if (User.IsInRole("Provider"))
    {
        <li class="@UserProfileNavPages.UserProfileNavClass(ViewContext)"><a asp-action="Details" asp-controller="Providers" asp-route-id="@User.FindFirstValue(ClaimTypes.NameIdentifier)">View my UserProfile as others see it</a></li>
        <li class="@UserProfileNavPages.IndexPortfolioNavClass(ViewContext)"><a asp-action="Portfolio">Portfolio</a></li>
        <li class="@UserProfileNavPages.UserProfileDescriptionNavClass(ViewContext)"><a asp-action="UserProfileDescription">UserProfileDescription</a></li>
        <li class="@UserProfileNavPages.IndexOrdersNavClass(ViewContext)"><a asp-action="Orders">Orders <span class="badge badge-primary badge-pill pull-right">@ViewData["newMsgs"]</span></a></li>
    }
</ul>