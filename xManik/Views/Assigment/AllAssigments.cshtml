@model xManik.Extensions.PaginatedList<Assigment>

@{
    ViewData["Title"] = "AllAssigments";
    ViewData.AddActivePage(UserProfileMenuNavPages.AllAssigments);
    string role = null;
    if (User.IsInRole(Roles.Blogger.ToString()))
    {
        role = Roles.Blogger.ToString();
    }
    else if (User.IsInRole(Roles.Client.ToString()))
    {
        role = Roles.Client.ToString();
    }
}

<h2>Assigments</h2>

<div class="row">
    <div class="col-sm-3">
        <!--left col-->
        <ul class="list-group">
            <li class="list-group-item text-muted" contenteditable="false">Filters</li>
            <li class="list-group-item text-center">
                <a asp-action="AllAssigments" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().MaxBudget)</a>
            </li>
            <li class="list-group-item text-center">
                <a asp-action="AllAssigments" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Deadline)</a>
            </li>
            <li class="list-group-item text-center">
                <form asp-action="AllAssigments" method="get">
                    <div class="form-group">
                        <label for="inputdefault">Find by description</label>
                        <input type="text" class="form-control" name="SearchString" value="@ViewData["currentFilter"]" />
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Search" class="btn btn-default" /> |
                        <a asp-action="AllAssigments">Back to Full List</a>
                    </div>
                </form>
            </li>
        </ul>
    </div>

    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
        @if (Model.Count == 0)
        {
            <h1>Sorry, no Assigments with that description:</h1>
            <h2><i>@ViewData["CurrentFilter"]</i></h2>
        }
        @foreach (var item in Model)
        {
            <div class="well well-sm card">

                <a asp-action="Details" asp-route-id="@item.AssigmentId">More Details</a>
                <div class="card-body">
                    <h3 class="card-title">Product Name</h3>
                    <h4>$@item.MaxBudget</h4>
                    <h4>@item.Deadline</h4>
                    <h4>@item.ShortDescription</h4>


                    <p class="card-text">@item.DetailedDescription
                    @if (User.IsInRole(Roles.Blogger.ToString()))
                    {
                        var id = "id";
                        var roleName = "role";
                        <a asp-controller="Deal" asp-action="AddDeal" asp-all-route-data="new Dictionary<string, string> { { id ,item.AssigmentId}, { roleName, role} }">Offer personal site</a>
                    }
                </div>
               
            </div>
        }
    </div>
</div>
<br /><br />
<div class="center-block text-center">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="AllAssigments"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="AllAssigments"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>